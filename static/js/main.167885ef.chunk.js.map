{"version":3,"sources":["Components/Player.js","Components/Song.js","data.js","Components/LibrarySong.js","Components/Library.js","Components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Player","audioRef","currentSong","isPlaying","setIsPlaying","songInfo","setSongInfo","songs","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSong","map","song","id","active","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","getTime","time","Math","floor","slice","className","currentTime","type","min","max","duration","value","onChange","e","target","size","icon","faStepBackward","onClick","faPause","faPlay","console","log","pause","faStepForward","Song","src","cover","alt","name","artist","chillHop","audio","color","uuidv4","LibrarySong","songSelectHandler","selectedSong","filter","songFromState","Library","libraryStatus","setSong","Nav","setLibraryStatus","useState","opacity","setOpacity","style","faMusic","App","useRef","data","timeUpdateHandler","songEndHandler","onLoadedMetadata","onTimeUpdate","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.167885ef.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlay, faAngleLeft, faAngleRight, faPause, faStepBackward, faStepForward\r\n   } from '@fortawesome/free-solid-svg-icons'\r\nimport { playAudio } from '../util'\r\n\r\n\r\nconst Player = ({ audioRef, currentSong, isPlaying, setIsPlaying, songInfo, setSongInfo, songs, setCurrentSong, setSongs}) => {\r\n\r\n\r\n    // useEffect(() => {\r\n\r\n    //     // adding active state everytime we change the current song\r\n    //     const newSong = songs.map((song) => {\r\n    //         if(song.id === currentSong.id) {\r\n    //             return {\r\n    //                 ...song, //spread everything in song to access active\r\n    //                 active: true,\r\n    //             }\r\n    //         } else {\r\n    //             return {\r\n    //                 ...song,\r\n    //                 active: false,\r\n    //             }\r\n    //         }\r\n    //     })\r\n    //     setSongs(newSong)\r\n\r\n    // }, [currentSong])\r\n\r\n\r\n//Avoid re rendering the state with the function instead of useEffect\r\n   const activeLibraryHandler = (nextPrev) => {\r\n        // adding active state everytime we change the current song\r\n        const newSong = songs.map((song) => {\r\n            if(song.id === nextPrev.id) {\r\n                return {\r\n                    ...song, //spread everything in song to access active\r\n                    active: true,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...song,\r\n                    active: false,\r\n                }\r\n            }\r\n        })\r\n        setSongs(newSong)\r\n    }\r\n\r\n  const skipTrackHandler = async (direction) => {\r\n     let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n     if (direction === \"skip-forward\") {\r\n         await setCurrentSong(songs[(currentIndex + 1) % songs.length] );\r\n         activeLibraryHandler(songs[(currentIndex + 1) % songs.length] );\r\n     }\r\n     if (direction === \"skip-back\") {\r\n\r\n        //check first if the index is -1\r\n         if ((currentIndex - 1) % songs.length === -1) {\r\n         await setCurrentSong(songs[songs.length -1]); //returns X songs and beign an array sets the song to the last one\r\n         activeLibraryHandler(songs[songs.length -1])\r\n            return; // we add return to avoid get the line 21 executed\r\n         }\r\n       await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n       activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    if (isPlaying) audioRef.current.play();\r\n  }\r\n    \r\n    const playSongHandler = () => {\r\n        //grabbing specific html tag like document.querySelector('audio') with useRef\r\n        console.log(audioRef.current)\r\n        if (isPlaying) {\r\n            audioRef.current.pause()\r\n            setIsPlaying(!isPlaying)\r\n        }\r\n        else {\r\n            audioRef.current.play()\r\n            setIsPlaying(!isPlaying)\r\n        }\r\n    }\r\n\r\n    function getTime(time) {\r\n        return (\r\n          Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n        );\r\n      }\r\n\r\n\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value\r\n        setSongInfo({ ...songInfo, currentTime: e.target.value })  //...songinfo add everythings was inside the state\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{getTime(songInfo.currentTime)}</p>\r\n                <input \r\n                type=\"range\" \r\n                min={0} \r\n                max={songInfo.duration} \r\n                value={songInfo.currentTime}\r\n                onChange={dragHandler} />\r\n               <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon className=\"skip-back\" size=\"2x\" icon={faStepBackward}\r\n                onClick={() => skipTrackHandler(\"skip-back\")}/>\r\n                <FontAwesomeIcon \r\n                className=\"play\" \r\n                size=\"2x\" \r\n                icon={isPlaying ? faPause : faPlay} \r\n                onClick={playSongHandler}/>\r\n                <FontAwesomeIcon className=\"skip-forward\" size=\"2x\" icon={faStepForward}\r\n                onClick={() => skipTrackHandler(\"skip-forward\")}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player\r\n","import React from 'react'\r\n\r\nconst Song = ({currentSong, isPlaying}) => {\r\n    return (\r\n        <div className=\"song-container\">\r\n             <img \r\n               className={isPlaying ? \"rotateSong\" : \"\"}\r\n             src={currentSong.cover} alt=\"song cover\" />\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Song\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\n\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    \r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    \r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    //ADD MORE \r\n  ];\r\n}\r\n\r\nexport default chillHop;","import React from 'react'\r\nimport { playAudio } from '../util';\r\n\r\nconst LibrarySong = ({ song , songs, setCurrentSong, audioRef, audio, isPlaying, setSongs}) => {\r\n\r\n    const songSelectHandler = async () => {\r\n        const selectedSong = songs.filter((songFromState) => songFromState.id === song.id);\r\n        //filters return array with just 1 element so we need to access to this element with [0]\r\n        const id = selectedSong[0].id\r\n        // console.log(id)\r\n        // console.log(selectedSong)\r\n        await setCurrentSong(selectedSong[0])\r\n       \r\n        // setCurrentSong(song)\r\n        // console.log(song)\r\n        //changing active state\r\n        \r\n\r\n        if (isPlaying) audioRef.current.play();\r\n\r\n        }\r\n\r\n    return (\r\n        <div onClick={songSelectHandler} className={`library-song ${song.active ? 'selected' : \"\"}`}>\r\n             <img src={song.cover} alt=\"song cover\" />\r\n            <div className=\"song-description\">\r\n            <h3>{song.name}</h3>\r\n            <h4>{song.artist}</h4>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LibrarySong\r\n","import React from 'react'\r\nimport LibrarySong from './LibrarySong'\r\n\r\nconst Library = ({ songs, setCurrentSong , audioRef, isPlaying, setSongs, libraryStatus, setSong}) => {\r\n    return (\r\n        <div className={`library ${libraryStatus ? \"active-library\" : \" \"}`}>\r\n            <h2>PlayList</h2>\r\n            <div className=\"library-songs\">\r\n            {songs.map(song => ( \r\n            <LibrarySong \r\n            songs={songs}\r\n            song={song} \r\n            key={song.id} \r\n            setCurrentSong={setCurrentSong} \r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n\r\n            />))}    \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Library\r\n","import {useState} from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\r\n  const openLibraryHandler = () => {\r\n    setLibraryStatus(!libraryStatus);\r\n  };\r\n  const [opacity, setOpacity] = useState(1);\r\n\r\n  const wrapperfunction = () => {\r\n    openLibraryHandler();\r\n    setOpacity( opacity === 1 ? 0 : 1 );\r\n  }\r\n  \r\n  return (\r\n    <nav>\r\n      <h1 className=\"hidden\" style={{ opacity }}>React Beats</h1>\r\n      <button\r\n        className={libraryStatus ? \"library-active\" : \"\"}\r\n        onClick={wrapperfunction} \r\n      >\r\n        {libraryStatus === false ? \"PlayList\" : \"Close PlayList\"  }\r\n        {libraryStatus === false ? <FontAwesomeIcon icon={faMusic}></FontAwesomeIcon> : \"\"}\r\n      </button>\r\n    </nav>\r\n\r\n  );\r\n};\r\n\r\nexport default Nav;","import '../src/Sass/App.scss';\r\nimport { useState, useRef } from 'react';\r\nimport Player from './Components/Player';\r\nimport Song from './Components/Song';\r\nimport data from './data';\r\nimport Library from './Components/Library';\r\nimport Nav from './Components/Nav';\r\n\r\nfunction App() {\r\n\r\n  //ref\r\n  const audioRef = useRef(null);\r\n  const [songs, setSongs] = useState(data());\r\n  const [currentSong, setCurrentSong] = useState(songs[0]);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [libraryStatus, setLibraryStatus] = useState(false);\r\n  const [ songInfo, setSongInfo] = useState({\r\n    currentTime: 0,\r\n    duration: 0,\r\n});\r\n\r\n  const timeUpdateHandler = (e) => {\r\n    const current = e.target.currentTime;\r\n    const duration = e.target.duration\r\n    console.log(duration)\r\n    setSongInfo({ ...songInfo, currentTime: current, duration }) //duration: duration being same name is possible to just put duration\r\n\r\n}\r\n\r\nconst songEndHandler = async (e) => {\r\n  let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n  await setCurrentSong(songs[(currentIndex + 1) % songs.length]  );\r\n  if (isPlaying) audioRef.current.play();\r\n}\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav \r\n      libraryStatus={libraryStatus}\r\n      setLibraryStatus={setLibraryStatus}\r\n      />\r\n      <Song \r\n      currentSong={currentSong} \r\n      isPlaying={isPlaying}\r\n      />\r\n      <Player \r\n      isPlaying={isPlaying}\r\n      setIsPlaying={setIsPlaying}\r\n      currentSong={currentSong} \r\n      setCurrentSong={setCurrentSong}\r\n      audioRef={audioRef}\r\n      setSongInfo={setSongInfo}\r\n      songInfo={songInfo}\r\n      songs={songs}\r\n      setSongs={setSongs}\r\n      \r\n      />\r\n      <Library \r\n      isPlaying={isPlaying}\r\n      audioRef={audioRef}\r\n      songs={songs}\r\n      setSongs={setSongs}\r\n      setCurrentSong={setCurrentSong}\r\n      libraryStatus={libraryStatus}\r\n      />\r\n      \r\n      <audio\r\n            onLoadedMetadata={timeUpdateHandler} \r\n            onTimeUpdate={timeUpdateHandler} //once info song is loaded \"fetches\" the data\r\n            ref={audioRef} \r\n            src={currentSong.audio}\r\n            onEnded={songEndHandler}\r\n            >\r\n      </audio>\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport '../src/Sass/App.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}